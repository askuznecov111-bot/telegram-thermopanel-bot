#!/usr/bin/env python3
"""
–ü–æ–∏—Å–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ deployment
"""
import os
from dotenv import load_dotenv
from abacusai import ApiClient

load_dotenv()

API_KEY = os.getenv('ABACUS_API_KEY', 's2_a337cfbf99eb400fa20558122b95d310')

print("="*60)
print("–ü–æ–∏—Å–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö deployments –∏ –ø—Ä–æ–µ–∫—Ç–æ–≤")
print("="*60)

try:
    client = ApiClient(API_KEY)
    print("‚úÖ –ö–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    # –ü–æ–ø—Ä–æ–±—É–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
    print("\nüìã –°–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤:")
    try:
        projects = client.list_projects()
        if projects:
            for project in projects[:10]:
                print(f"\n  Project ID: {project.project_id}")
                print(f"  Name: {project.name}")
                print(f"  Use Case: {project.use_case}")
                
                # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å deployments –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
                try:
                    deployments = client.list_deployments(project_id=project.project_id)
                    if deployments:
                        print(f"  Deployments:")
                        for dep in deployments:
                            print(f"    - Deployment ID: {dep.deployment_id}")
                            print(f"      Name: {dep.name}")
                            print(f"      Status: {dep.status}")
                            
                            # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å deployment token
                            try:
                                tokens = client.list_deployment_tokens(project_id=project.project_id)
                                if tokens:
                                    print(f"      Deployment Tokens:")
                                    for token in tokens:
                                        print(f"        - Token: {token.deployment_token}")
                            except Exception as e:
                                print(f"      ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å tokens: {str(e)[:100]}")
                except Exception as e:
                    print(f"  ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å deployments: {str(e)[:100]}")
        else:
            print("  –ù–µ—Ç –ø—Ä–æ–µ–∫—Ç–æ–≤")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤: {str(e)[:500]}")
    
    # –ü–æ–ø—Ä–æ–±—É–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö deployments
    print("\n\nüìã –ü—Ä—è–º–æ–π —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö deployments:")
    try:
        all_deployments = client.list_deployments()
        if all_deployments:
            for dep in all_deployments[:5]:
                print(f"\n  Deployment ID: {dep.deployment_id}")
                print(f"  Name: {dep.name}")
                print(f"  Status: {dep.status}")
        else:
            print("  –ù–µ—Ç deployments")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)[:500]}")

except Exception as e:
    print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()

print("\n" + "="*60)
print("–ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω")
print("="*60)
