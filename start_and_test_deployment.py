#!/usr/bin/env python3
"""
–ó–∞–ø—É—Å–∫ deployment –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
"""
import os
import time
from dotenv import load_dotenv
from abacusai import ApiClient

load_dotenv()

API_KEY = os.getenv('ABACUS_API_KEY', 's2_a337cfbf99eb400fa20558122b95d310')

# –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ credentials
PROJECT_ID = '117f38e11e'
DEPLOYMENT_ID = '7c388e8dc'
DEPLOYMENT_TOKEN = '7ee99cc13aff41c7b00d1b6d7bb45bd8'

print("="*60)
print("–ó–∞–ø—É—Å–∫ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ deployment")
print("="*60)
print(f"Project ID: {PROJECT_ID}")
print(f"Deployment ID: {DEPLOYMENT_ID}")
print(f"Deployment Token: {DEPLOYMENT_TOKEN}")
print("="*60)

try:
    client = ApiClient(API_KEY)
    print("‚úÖ –ö–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    print("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ deployment:")
    deployment = client.describe_deployment(DEPLOYMENT_ID)
    print(f"–°—Ç–∞—Ç—É—Å: {deployment.status}")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º deployment –µ—Å–ª–∏ –æ–Ω –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    if deployment.status == 'STOPPED':
        print("\nüöÄ –ó–∞–ø—É—Å–∫ deployment...")
        try:
            client.start_deployment(DEPLOYMENT_ID)
            print("‚úÖ –ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")
            
            # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è)
            print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ (max 60 —Å–µ–∫—É–Ω–¥)...")
            for i in range(12):  # 12 –ø–æ–ø—ã—Ç–æ–∫ –ø–æ 5 —Å–µ–∫—É–Ω–¥
                time.sleep(5)
                deployment = client.describe_deployment(DEPLOYMENT_ID)
                print(f"   –ü–æ–ø—ã—Ç–∫–∞ {i+1}/12: –°—Ç–∞—Ç—É—Å = {deployment.status}")
                if deployment.status == 'ACTIVE':
                    print("‚úÖ Deployment –∞–∫—Ç–∏–≤–µ–Ω!")
                    break
            else:
                print("‚ö†Ô∏è Deployment –µ—â–µ –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {str(e)[:500]}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —á–∞—Ç
    print("\nüí¨ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∞—Ç–∞:")
    try:
        response = client.get_chat_response(
            deployment_token=DEPLOYMENT_TOKEN,
            deployment_id=DEPLOYMENT_ID,
            messages=[
                {"is_user": True, "text": "–ü—Ä–∏–≤–µ—Ç! –†–∞—Å—Å–∫–∞–∂–∏ –∫—Ä–∞—Ç–∫–æ –æ —Ç–µ—Ä–º–æ–ø–∞–Ω–µ–ª—è—Ö."}
            ]
        )
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç!")
        print(f"\n–û—Ç–≤–µ—Ç —Ç–∏–ø–∞: {type(response)}")
        print(f"–°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {response}")
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º –∏–∑–≤–ª–µ—á—å —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
        if isinstance(response, dict):
            if 'content' in response:
                print(f"\nüìù –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞:\n{response['content']}")
            elif 'response' in response:
                print(f"\nüìù –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞:\n{response['response']}")
            elif 'text' in response:
                print(f"\nüìù –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞:\n{response['text']}")
            else:
                print(f"\nüìù –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç:\n{response}")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞: {str(e)[:500]}")
        import traceback
        traceback.print_exc()

except Exception as e:
    print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()

print("\n" + "="*60)
print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
print("="*60)
