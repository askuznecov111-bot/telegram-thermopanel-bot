#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å deployment_token
"""
import os
import inspect
from dotenv import load_dotenv
from abacusai import ApiClient

load_dotenv()

API_KEY = os.getenv('ABACUS_API_KEY', 's2_a337cfbf99eb400fa20558122b95d310')
DEPLOYMENT_TOKEN = os.getenv('ABACUS_APP_ID', '1f9935b84')

print("="*60)
print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å Deployment Token")
print("="*60)
print(f"API Key: {API_KEY[:15]}...")
print(f"Deployment Token: {DEPLOYMENT_TOKEN}")
print("="*60)

try:
    client = ApiClient(API_KEY)
    print("‚úÖ –ö–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–≥–Ω–∞—Ç—É—Ä—É get_chat_response
    print("\nüìã –°–∏–≥–Ω–∞—Ç—É—Ä–∞ get_chat_response:")
    sig = inspect.signature(client.get_chat_response)
    print(f"–ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {sig}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–≥–Ω–∞—Ç—É—Ä—É create_deployment_conversation
    print("\nüìã –°–∏–≥–Ω–∞—Ç—É—Ä–∞ create_deployment_conversation:")
    sig2 = inspect.signature(client.create_deployment_conversation)
    print(f"–ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {sig2}")
    
    # –í–∞—Ä–∏–∞–Ω—Ç 1: –ü–æ–ø—Ä–æ–±—É–µ–º get_chat_response —Å deployment_token
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ get_chat_response —Å deployment_token:")
    try:
        response = client.get_chat_response(
            deployment_token=DEPLOYMENT_TOKEN,
            messages=[
                {"is_user": True, "text": "–ü—Ä–∏–≤–µ—Ç! –†–∞—Å—Å–∫–∞–∂–∏ –æ —Ç–µ—Ä–º–æ–ø–∞–Ω–µ–ª—è—Ö."}
            ]
        )
        print(f"‚úÖ –£—Å–ø–µ—Ö! Response: {response}")
        if hasattr(response, '__dict__'):
            print(f"Response attributes: {response.__dict__}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)[:500]}")
        import traceback
        traceback.print_exc()
    
    # –í–∞—Ä–∏–∞–Ω—Ç 2: –ü–æ–ø—Ä–æ–±—É–µ–º create_deployment_conversation
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ create_deployment_conversation:")
    try:
        # –°–Ω–∞—á–∞–ª–∞ —É–∑–Ω–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        help_text = help(client.create_deployment_conversation)
        print(f"Help: {help_text}")
    except:
        pass
    
    try:
        conversation = client.create_deployment_conversation(
            deployment_token=DEPLOYMENT_TOKEN,
            name="Test Conversation"
        )
        print(f"‚úÖ Conversation —Å–æ–∑–¥–∞–Ω: {conversation}")
        
        # –¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
        if hasattr(conversation, 'deployment_conversation_id'):
            conv_id = conversation.deployment_conversation_id
            print(f"\n–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ conversation {conv_id}...")
            # –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)[:500]}")
    
    # –í–∞—Ä–∏–∞–Ω—Ç 3: –ü—Ä–æ–≤–µ—Ä–∏–º create_chat_session
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ create_chat_session:")
    sig3 = inspect.signature(client.create_chat_session)
    print(f"–ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {sig3}")
    try:
        session = client.create_chat_session(
            name="Test Session"
        )
        print(f"‚úÖ Session —Å–æ–∑–¥–∞–Ω–∞: {session}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)[:500]}")

except Exception as e:
    print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()

print("\n" + "="*60)
print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
print("="*60)
